<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GHCustomControls</name>
    </assembly>
    <members>
        <member name="T:GHCustomControls.CheckBox">
            <summary>
            Display a check box in the gasshopper component, the CurrentValue defines the check status of the checkbox.
            </summary>
        </member>
        <member name="M:GHCustomControls.CheckBox.#ctor(System.String,System.String,System.Boolean,System.Drawing.Bitmap)">
            <summary>
            construct an instance of the check box
            </summary>
            <param name="name">Parameter name also the label displayed next to the checkbox</param>
            <param name="description">The description used in tooltip</param>
            <param name="isChecked">the initial status of the check box (CurrentValue)</param>
            <param name="toolTipDiagram">An optional bitmap to show in the detail area of the tooltip</param>
        </member>
        <member name="P:GHCustomControls.CheckBox.CheckBoxSize">
            <summary>
            size of the square
            </summary>
        </member>
        <member name="F:GHCustomControls.CheckBox._checkBoxRec">
            <summary>
            the rectangle representing the check box
            </summary>
        </member>
        <member name="M:GHCustomControls.DegreeSlider.#ctor(System.String,System.String,System.Int32,System.Single,System.Single,System.Single,System.Drawing.Bitmap)">
            <summary>
            Construc a Degree slider with min and max limits
            </summary>
            <param name="min">minimum value</param>
            <param name="max">maximum value</param>
            <param name="radius">the radius of the contorl</param>
            <param name="defualtValue"></param>
        </member>
        <member name="M:GHCustomControls.DegreeSlider.getAngle(System.Single,System.Single)">
            <summary>
            angle of the point in degree between min and max
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.DegreeSlider.inRange(System.Single)">
            <summary>
            returns true if the given angle in 360 is in given min and max range 
            </summary>
            <param name="angle"></param>
            <returns></returns>
        </member>
        <member name="F:GHCustomControls.GHCustomAttributes._offset">
            <summary>
            the amount of the offset for the bounds of this componenet from the largest sub-control 
            </summary>
        </member>
        <member name="F:GHCustomControls.GHCustomAttributes._layout">
            <summary>
            false when expireLayout() is called , true when Layout() is called 
            this is to avoid multiple call to Layout()
            </summary>
        </member>
        <member name="M:GHCustomControls.GHCustomAttributes.Redraw">
            <summary>
            redraw the layout
            </summary>
        </member>
        <member name="T:GHCustomControls.GHCustomComponent">
            <summary>
            Inheriate from this calss to use custom controls in GH component
            </summary>
        </member>
        <member name="M:GHCustomControls.GHCustomComponent.GetControlData``1(``0@,System.String[])">
            <summary>
            retrive the value of the custom control by name.
            if the path is invalid or the control is not a parameter then thorws an exception.
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">the current value of the control</param>
            <param name="path">path to the control</param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.GHCustomComponent.GetImage(System.String)">
            <summary>
            Rerun an image by its path.
            </summary>
            <param name="path">Path to your image : FLODER.IMAGENAME</param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.GHCustomComponent.GetBitmap(System.String)">
            <summary>
            Return an icon by its path. 
            </summary>
            <param name="path">Path to your icon : FLODER.ICONNAME</param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.GHCustomComponent.ToInternalUnits(System.Double)">
            <summary>
            converts the given value from millimeter to internal units
            </summary>
            <param name="mm"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.GHCustomComponent.NumDecimals">
            <summary>
            return the number of decimals which at least can represent millimiter in any unit system
            </summary>
            <returns></returns>
        </member>
        <member name="P:GHCustomControls.GHParameter.DataType">
            <summary>
            type of the data stored in parameter
            </summary>
        </member>
        <member name="P:GHCustomControls.GHParameter.UpdateSolution">
            <summary>
            if true then updates the solution when change
            </summary>
        </member>
        <member name="P:GHCustomControls.GHParameter.CurrentValue">
            <summary>
            the value stored in the parameter
            </summary>
        </member>
        <member name="F:GHCustomControls.Group._switch">
            <summary>
            the rectangle for the collapse and open toggle 
            </summary>
        </member>
        <member name="F:GHCustomControls.Group._titleHeight">
            <summary>
            the height of the group title
            </summary>
        </member>
        <member name="F:GHCustomControls.Group._icon16x16">
            <summary>
            icon , if not null
            </summary>
        </member>
        <member name="M:GHCustomControls.Group.FindMember(System.String,GHCustomControls.GHControl@)">
            <summary>
            find a member in the group or sub-groups by name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.Helpers.Offset(System.Drawing.RectangleF,System.Single)">
            <summary>
            Create new rectangeF by offseting this rectangle inside.(negative value offsets the rectangle outside)
            </summary>
            <param name="rectangle"></param>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.Helpers.Center(System.Drawing.RectangleF,System.Drawing.Size)">
            <summary>
            Create a new rectangleF in given size at the center of this rectangle
            </summary>
            <param name="rectangle"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.HorizontalSliderFloat.#ctor(System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.String,System.Boolean)">
            <summary>
            number of decimals in text formatting
            </summary>
        </member>
        <member name="T:GHCustomControls.HorizontalSliderPercentage">
            <summary>
            construct a horizontal slider representing percentage value 
            the value varies between 0 and 1 . 
            </summary>
        </member>
        <member name="M:GHCustomControls.HorizontalSliderPercentage.#ctor(System.String,System.String,System.Single,System.Single,System.Single,System.Int32,System.String,System.Boolean)">
            <summary>
            create a horizontal slider for percentage input , the actual value is between 0 to 1
            </summary>
            <param name="title"></param>
            <param name="description"></param>
            <param name="value"></param>
            <param name="min"></param>
            <param name="max"></param>
            <param name="decimals"></param>
            <param name="suffix"></param>
        </member>
        <member name="M:GHCustomControls.IGHCustomControl.Refresh">
            <summary>
            Update the graphics of the control
            </summary>
        </member>
        <member name="T:GHCustomControls.IGHPanel">
            <summary>
            implement this interface for the controls with sub-items, like group, tabs ...
            </summary>
        </member>
        <member name="P:GHCustomControls.IGHPanel.Items">
            <summary>
            array of the 
            </summary>
        </member>
        <member name="P:GHCustomControls.IGHPanel.Orientation">
            <summary>
            The orinetation in which the childrens are placed 
            </summary>
        </member>
        <member name="M:GHCustomControls.IGHPanelExtensions.GetChildrenHeight(GHCustomControls.IGHPanel,System.Collections.Generic.IEnumerable{GHCustomControls.GHControl})">
            <summary>
            for vertical panel calculates the sum of the height of all children plus the offset amount.
            for horizontal panel calculates the maximum height among the children
            </summary>
            <param name="gHContainer"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.IGHPanelExtensions.GetChildrenWidth(GHCustomControls.IGHPanel,System.Collections.Generic.IEnumerable{GHCustomControls.GHControl})">
            <summary>
            for vertical panel calculates the maximum widh of all chilkdren.
            for horizontal panel calculates sum of the width plus the offset between them
            </summary>
            <param name="gHContainer"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.IGHPanelExtensions.MouseClickChildren(GHCustomControls.IGHPanel,Grasshopper.GUI.Canvas.GH_Canvas,GHCustomControls.GHCustomComponent,Grasshopper.GUI.GH_CanvasMouseEvent,GHCustomControls.GHMouseEventResult@)">
            <summary>
            finds the children in which the cursor is inside and then call the MouseClick method for that child
            </summary>
            <param name="gHContainer"></param>
            <param name="customComponent"></param>
            <param name="e"></param>
            <param name="result"></param>
        </member>
        <member name="M:GHCustomControls.IGHPanelExtensions.MouseOverChildren(GHCustomControls.IGHPanel,Grasshopper.GUI.Canvas.GH_Canvas,GHCustomControls.GHCustomComponent,Grasshopper.GUI.GH_CanvasMouseEvent,GHCustomControls.GHMouseEventResult@)">
            <summary>
            finds the children in which the cursor is inside and then call the MouseOver method for that child
            </summary>
            <param name="gHContainer"></param>
            <param name="customComponent"></param>
            <param name="e"></param>
            <param name="result"></param>
        </member>
        <member name="M:GHCustomControls.IGHPanelExtensions.SetChildrenToolTip(GHCustomControls.IGHPanel,System.Drawing.PointF,Grasshopper.GUI.GH_TooltipDisplayEventArgs)">
            <summary>
            finds the children in which the cursor is inside and then set the too tip accordingly and return true.
            If no child is active then return false
            </summary>
            <param name="canvasPoint"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.IGHPanelExtensions.GetControl(GHCustomControls.IGHPanel,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            get access to the child control in the panel and its children by set of the names (path).
            The path must start with a child name.
            throw exception if the path is not valid
            </summary>
            <param name="gHContainer"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.IGHPanelExtensions.ActiveBrush(GHCustomControls.GHControl)">
            <summary>
            return the defualt brush based on the control state (enable or disable)
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="F:GHCustomControls.GHControl.isMouseIn">
            <summary>
            true when the cursor is inside the <c>ActiveZone</c>
            </summary>
        </member>
        <member name="P:GHCustomControls.GHControl.Name">
            <summary>
            name of the control also it is used as the title in UI
            </summary>
        </member>
        <member name="P:GHCustomControls.GHControl.ToolTipDiagram">
            <summary>
            a bitmap shown in the detail area of the tooltip
            </summary>
        </member>
        <member name="P:GHCustomControls.GHControl.Offset">
            <summary>
            the amount of the offset for the sub-controls inside this control
            </summary>
        </member>
        <member name="F:GHCustomControls.GHControl._visible">
            <summary>
            used to react to the mouse  
            </summary>
        </member>
        <member name="P:GHCustomControls.GHControl.IsVisible">
            <summary>
            return true if the control is visible 
            </summary>
        </member>
        <member name="P:GHCustomControls.GHControl.Enabled">
            <summary>
            when control is not enabled do not responds to  mouse event and it renderes as locked 
            </summary>
        </member>
        <member name="M:GHCustomControls.GHControl.SetAttribute(GHCustomControls.GHCustomAttributes)">
            <summary>
            set the attribute of this control and all its children 
            </summary>
            <param name="att"></param>
        </member>
        <member name="M:GHCustomControls.GHControl.ActiveBrush">
            <summary>
            return the defualt brush based on the control state (enable or disable)
            </summary>
            <param name="control"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.GHControl.Refresh">
            <summary>
            updates the control graphics at the next paint operation
            </summary>
        </member>
        <member name="M:GHCustomControls.GHControl.ForceRedraw">
            <summary>
            schedule to redraw the canvas in 100 ms
            </summary>
        </member>
        <member name="F:GHCustomControls.HorizontalSlider._sliderRec">
            <summary>
            the rectangle host the slider grip
            </summary>
        </member>
        <member name="F:GHCustomControls.HorizontalSlider._sliderBar">
            <summary>
            the horizontal bar
            </summary>
        </member>
        <member name="F:GHCustomControls.HorizontalSlider.showLabel">
            <summary>
            if true then it shows the number above slider
            </summary>
        </member>
        <member name="M:GHCustomControls.HorizontalSlider.GetValueAsString(System.Single)">
            <summary>
            return the formated string for the given float number between 0 to 1
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.HorizontalSlider.UpdateValue">
            <summary>
            update the current value based on the current position of the slider (X)
            </summary>
        </member>
        <member name="M:GHCustomControls.HorizontalSlider.UpdatePos">
            <summary>
            updates the current position (X) based on the current value (CurrentValue) 
            X must be between Offset and Bounds.Width-Offset
            </summary>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.HorizontalSlider.GetPos(System.Single)">
            <summary>
            return the X curresponding to the given value (between min and max)
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.HorizontalSlider.GetNormalizedValue(System.Single)">
            <summary>
            return the value between 0 and 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.HorizontalSlider.GetCurrentValue">
            <summary>
            return float number represting the current value 
            </summary>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.PictureFrame.#ctor(System.String,System.String,System.Drawing.Image)">
            <summary>
            render the image in actual size
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <param name="image"></param>
        </member>
        <member name="M:GHCustomControls.PictureFrame.#ctor(System.String,System.String,System.Drawing.Image,System.Drawing.Size)">
            <summary>
            fit the image to the given size 
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <param name="image"></param>
            <param name="size"></param>
        </member>
        <member name="M:GHCustomControls.PictureFrame.#ctor(System.String,System.String,System.Drawing.Image,System.Int32)">
            <summary>
            fit the image to the given width
            </summary>
            <param name="name"></param>
            <param name="description"></param>
            <param name="image"></param>
            <param name="width"></param>
        </member>
        <member name="T:GHCustomControls.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GHCustomControls.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GHCustomControls.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GHCustomControls.Properties.Resources.greenRoundOkButton">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:GHCustomControls.PushButton">
            <summary>
            A PushButton value can be 0 or 1, when the button is pressed (Mouse left click) the value changes to 1 and when the mouse leaves the button
            or the left button is up the value changes back to the 0. The solution is updated when the button is pressed (only if UpdateSolution is set to true)
            </summary>
        </member>
        <member name="F:GHCustomControls.PushButton._isPressed">
            <summary>
            true between the mouse down and mouse up event
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel._values">
            <summary>
            value correspond to each tab
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel._icons">
            <summary>
            the tab name - imahe dictionary 
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel._tabs">
            <summary>
            the tab name - control array dictionary 
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel._headers">
            <summary>
            the rectangles of the headers
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel._tabRec">
            <summary>
            the area of the tab contents
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel.gradientBrush">
            <summary>
            brush used to create the highlight
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel._showTitle">
            <summary>
            if true then it shows the title of the panel group 
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel._showHeaderText">
            <summary>
            set to false if the icon is provided . 
            </summary>
        </member>
        <member name="F:GHCustomControls.TabPanel._tabHeight">
            <summary>
            the height of the area where tab names are located
            </summary>
        </member>
        <member name="T:GHCustomControls.NumericUpDownWindow">
            <summary>
            Interaction logic for TextBoxWindow.xaml
            </summary>
            <summary>
            NumericUpDownWindow
            </summary>
        </member>
        <member name="M:GHCustomControls.NumericUpDownWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:GHCustomControls.MultiToggleSwitchItem.GetWidth">
            <summary>
            Width of the item
            </summary>
            <returns></returns>
        </member>
        <member name="M:GHCustomControls.MultiToggleSwitchItem.GetHeight">
            <summary>
            Height of the item
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
